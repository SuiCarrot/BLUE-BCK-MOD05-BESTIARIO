var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.29,1,2.065]],["body/controllers/AppController.html",[0,2.05,1,3.28,2,1.638,3,0.447,4,0.392,5,0.339,6,3.394,7,0.692,8,1.885,9,4.859,10,1.784,11,0.032,12,4.066,13,3.694,14,5.089,15,3.28,16,5.089,17,0.834,18,4.066,19,1.387,20,1.354,21,0.61,22,0.912,23,2.621,24,3.28,25,1.387,26,2.92,27,3.394,28,4.066,29,0.447,30,0.019,31,1.949,32,1.949,33,2.621,34,1.506,35,4.066,36,0.025,37,0.025]],["title/modules/AppModule.html",[38,1.187,39,2.065]],["body/modules/AppModule.html",[1,3.382,2,1.897,3,0.396,4,0.347,5,0.3,11,0.032,21,0.663,22,0.808,26,3.114,27,3.007,29,0.396,30,0.017,36,0.023,37,0.023,38,1.745,39,4.122,40,1.581,41,2.067,42,3.007,43,3.007,44,3.007,45,3.434,46,2.6,47,3.434,48,3.434,49,2.476,50,1.893,51,1.893,52,3.602,53,2.73,54,3.036,55,3.602,56,3.602,57,3.007,58,3.602,59,3.602]],["title/injectables/AppService.html",[26,1.684,60,0.926]],["body/injectables/AppService.html",[3,0.483,4,0.424,5,0.367,7,0.748,8,1.979,9,4.994,11,0.032,17,0.902,19,1.499,20,1.421,21,0.483,22,0.986,26,2.807,29,0.483,30,0.021,34,1.629,36,0.026,37,0.026,60,1.544,61,2.107,62,3.67,63,4.397,64,4.397,65,4.397,66,4.397,67,4.397,68,4.397,69,4.397,70,3.192,71,4.397]],["title/controllers/AuthController.html",[0,1.29,72,2.065]],["body/controllers/AuthController.html",[0,1.476,2,1.476,3,0.402,4,0.353,5,0.306,7,0.624,8,1.764,10,1.608,11,0.032,17,0.752,19,1.249,21,0.638,22,0.821,23,2.361,24,3.069,25,1.249,29,0.402,30,0.018,31,1.756,32,1.756,33,2.361,34,1.357,36,0.024,37,0.024,72,3.069,73,3.058,74,2.659,75,3.663,76,3.61,77,3.663,78,3.45,79,3.663,80,4.762,81,4.762,82,3.069,83,3.456,84,2.09,85,3.975,86,3.663,87,1.476,88,1.151,89,0.821,90,1.249,91,3.069,92,2.659,93,3.663,94,3.663,95,3.456,96,2.781,97,3.058,98,2.124,99,3.058,100,3.058,101,3.058,102,3.663,103,3.663,104,3.663,105,3.663,106,3.663]],["title/modules/AuthModule.html",[38,1.187,45,1.857]],["body/modules/AuthModule.html",[2,1.901,3,0.397,4,0.348,5,0.301,11,0.033,21,0.663,22,0.81,29,0.397,30,0.017,36,0.023,37,0.023,38,1.748,40,1.585,41,2.071,45,3.622,46,2.602,49,2.48,50,1.899,51,1.899,53,2.735,54,3.041,72,3.387,96,3.116,97,3.015,107,3.015,108,3.612,109,3.015,110,3.436,111,3.612,112,3.612,113,3.015,114,3.612,115,2.622,116,2.622,117,1.731,118,3.612,119,2.622,120,2.622,121,2.094,122,3.612,123,3.612,124,3.015,125,3.612,126,3.612,127,3.612]],["title/injectables/AuthService.html",[60,0.926,96,1.684]],["body/injectables/AuthService.html",[3,0.353,4,0.31,5,0.268,7,0.548,8,1.618,11,0.033,17,0.896,19,1.097,21,0.63,22,0.722,29,0.353,30,0.015,32,2.094,34,1.192,36,0.022,37,0.022,60,1.263,61,1.542,76,2.816,78,3.084,83,2.336,87,1.76,88,1.372,89,0.98,90,1.49,91,2.816,96,2.296,98,1.865,99,2.686,100,2.686,101,2.686,115,2.336,128,2.686,129,2.875,130,2.816,131,2.074,132,2.143,133,5.867,134,3.218,135,2.532,136,4.368,137,3.218,138,2.296,139,2.686,140,3.218,141,3.171,142,3.646,143,2.875,144,2.607,145,1.865,146,1.319,147,2.532,148,2.336,149,2.816,150,2.296,151,4.368,152,4.368,153,3.171,154,4.368,155,4.368,156,3.218,157,3.171,158,2.094,159,2.336,160,3.218]],["title/classes/CreateProfileDto.html",[30,0.015,161,1.684]],["body/classes/CreateProfileDto.html",[3,0.37,4,0.325,5,0.281,7,0.573,10,2.228,11,0.032,17,1.042,20,1.547,21,0.495,25,1.149,29,0.37,30,0.022,36,0.022,37,0.022,84,1.977,89,1.138,161,2.368,162,1.357,163,4.524,164,2.445,165,1.815,166,3.685,167,3.685,168,3.272,169,3.368,170,4.505,171,4.22,172,4.524,173,3.27,174,3.761,175,4.505,176,3.747,177,4.505,178,3.368,179,3.368,180,2.812,181,3.761,182,3.761,183,3.761,184,4.237,185,3.761,186,4.505,187,3.368,188,3.368,189,1.977,190,1.977,191,4.505,192,4.505,193,3.368,194,3.493,195,3.27,196,4.505,197,4.505,198,2.812,199,2.171,200,2.812,201,2.668]],["title/classes/CreateUserDto.html",[30,0.015,202,1.684]],["body/classes/CreateUserDto.html",[3,0.269,4,0.236,5,0.204,7,0.416,10,2.301,11,0.032,15,2.319,17,1.076,20,1.536,21,0.395,25,0.834,29,0.269,30,0.017,36,0.018,37,0.018,76,3.034,84,1.579,88,1.34,89,1.176,144,2.636,145,2.474,146,1.442,153,4.038,162,0.985,165,1.45,172,3.928,173,2.612,176,3.817,180,2.042,181,3.004,182,3.004,183,3.004,184,3.563,185,3.004,190,2.441,194,3.495,195,2.612,198,2.042,199,1.577,200,3.004,201,2.757,202,1.891,203,4.526,204,2.042,205,4.268,206,3.936,207,2.474,208,3.004,209,3.598,210,3.598,211,3.928,212,2.446,213,3.598,214,2.446,215,3.598,216,3.928,217,2.446,218,3.598,219,3.598,220,3.598,221,2.446,222,2.446,223,3.416,224,3.004,225,2.446,226,3.004,227,3.598,228,3.598,229,2.612,230,2.446,231,2.612,232,3.598,233,4.378,234,3.598,235,3.598,236,3.598,237,2.446,238,2.446,239,3.598,240,3.598,241,3.598,242,2.446,243,3.598,244,3.598,245,3.598,246,3.598,247,3.598,248,3.598,249,2.446,250,3.598,251,2.446,252,2.446,253,2.446,254,2.446,255,2.446,256,2.446,257,2.446,258,2.446]],["title/injectables/JwtStrategy.html",[60,0.926,110,1.857]],["body/injectables/JwtStrategy.html",[3,0.375,4,0.329,5,0.285,7,0.581,8,1.684,11,0.032,17,0.933,19,1.164,20,0.908,21,0.598,22,0.765,29,0.375,30,0.016,31,1.636,32,1.636,34,1.264,36,0.022,37,0.022,60,1.314,61,1.636,87,1.831,88,1.427,89,1.222,90,1.55,110,2.634,117,1.636,121,1.978,124,2.849,129,2.962,130,2.2,131,2.2,132,2.195,135,2.634,139,3.794,143,1.978,144,2.389,146,1.359,147,1.978,148,2.477,149,2.2,150,1.794,157,2.477,158,1.636,159,2.477,190,1.498,216,2.849,229,2.477,259,2.849,260,4.545,261,3.413,262,4.545,263,4.545,264,3.413,265,3.413,266,2.477,267,3.413,268,3.413,269,3.413,270,2.849,271,2.477,272,2.2,273,3.413,274,3.413,275,3.413,276,3.413,277,3.413,278,3.413,279,3.413,280,3.299,281,3.413,282,2.849,283,2.477,284,2.849,285,3.413,286,3.413]],["title/classes/LoginDto.html",[30,0.015,78,1.857]],["body/classes/LoginDto.html",[3,0.432,4,0.379,5,0.328,7,0.669,10,2.186,11,0.032,17,1.022,20,1.53,21,0.547,25,1.34,29,0.432,30,0.024,36,0.025,37,0.025,78,2.887,89,1.117,144,3.119,145,3.17,153,3.616,162,1.583,165,2.007,176,3.707,190,2.523,194,3.525,195,3.97,199,2.533,201,2.618,211,4.158,224,4.158,287,3.281,288,4.981,289,3.93,290,3.93,291,5.469]],["title/classes/LoginResponseDto.html",[30,0.015,98,1.857]],["body/classes/LoginResponseDto.html",[3,0.43,4,0.378,5,0.327,7,0.667,10,2.182,11,0.032,17,1.02,20,1.323,21,0.546,25,1.336,29,0.43,30,0.019,36,0.025,37,0.025,76,3.205,83,4.303,84,2.182,85,4.15,89,1.115,98,2.882,146,1.612,162,1.578,165,2.003,176,3.205,190,2.182,194,3.52,201,2.613,208,4.15,284,4.15,292,4.559,293,3.271,294,4.972,295,3.609,296,4.972,297,3.918,298,3.918,299,3.918]],["title/modules/PrismaModule.html",[38,1.187,46,1.406]],["body/modules/PrismaModule.html",[3,0.464,4,0.407,5,0.352,11,0.032,21,0.572,22,0.947,29,0.464,30,0.02,36,0.026,37,0.026,38,1.931,40,1.854,41,2.287,46,2.745,49,2.739,50,2.221,51,2.221,53,3.021,132,2.607,300,3.527,301,3.527,302,3.527,303,4.225,304,5.212,305,4.225]],["title/injectables/PrismaService.html",[60,0.926,132,1.29]],["body/injectables/PrismaService.html",[3,0.429,4,0.376,5,0.326,7,0.665,8,1.838,11,0.032,17,1.018,19,1.692,21,0.545,22,0.876,29,0.429,30,0.019,36,0.025,37,0.025,60,1.435,61,1.872,87,1.574,88,1.227,89,0.876,90,1.332,129,3.565,132,1.999,147,2.876,272,3.199,306,3.261,307,5.454,308,4.962,309,6.053,310,4.962,311,5.738,312,3.906,313,3.906,314,3.906,315,2.836,316,3.906,317,3.906,318,3.906,319,3.906]],["title/classes/Profile.html",[30,0.015,320,1.535]],["body/classes/Profile.html",[3,0.466,4,0.408,5,0.354,7,0.721,11,0.031,17,1.212,20,1.682,29,0.466,30,0.02,36,0.026,37,0.026,89,1.325,90,1.781,162,1.708,165,2.104,166,4.109,167,4.109,168,3.648,189,2.484,320,2.503,321,3.538,322,4.239,323,4.239,324,4.239,325,4.239]],["title/controllers/ProfileController.html",[0,1.29,326,2.065]],["body/controllers/ProfileController.html",[0,1.001,2,1.001,3,0.273,4,0.239,5,0.207,7,0.423,8,1.348,10,2.214,11,0.032,13,2.641,17,1.036,19,1.721,20,1.58,21,0.579,22,0.557,23,1.601,24,3.399,25,0.847,29,0.273,30,0.012,31,1.191,32,1.191,33,3.253,34,1.869,36,0.018,37,0.018,74,1.803,82,3.399,84,1.597,87,2.033,88,1.585,89,1.132,90,1.721,92,2.641,95,2.641,117,1.191,138,2.772,158,2.064,161,2.492,171,4.055,189,2.655,190,1.597,295,3.828,320,2.064,326,2.345,327,2.073,328,1.744,329,2.345,330,2.345,331,2.345,332,1.601,333,2.484,334,3.037,335,3.037,336,2.484,337,2.073,338,2.484,339,3.037,340,2.484,341,2.484,342,2.484,343,3.037,344,3.037,345,2.641,346,3.037,347,3.639,348,2.484,349,1.803,350,2.484,351,2.484,352,2.073,353,2.748,354,2.484,355,3.037,356,2.484,357,2.073,358,2.073,359,2.073,360,2.263,361,2.073,362,1.601,363,1.601,364,3.037,365,2.073,366,2.484,367,2.073,368,2.484,369,2.073,370,2.484,371,2.484,372,2.484,373,2.484,374,2.484,375,2.484,376,2.484,377,2.484,378,2.484,379,2.484,380,2.484,381,2.484,382,2.484]],["title/modules/ProfileModule.html",[38,1.187,47,1.857]],["body/modules/ProfileModule.html",[2,2.007,3,0.432,4,0.379,5,0.328,11,0.032,21,0.652,22,0.881,29,0.432,30,0.019,36,0.025,37,0.025,38,1.845,40,1.725,41,2.186,46,2.66,47,3.612,49,2.618,50,2.066,51,2.066,53,2.887,54,3.211,113,3.281,116,2.853,117,1.884,119,2.853,120,2.853,121,2.278,326,3.525,360,3.186,361,3.281,383,3.281,384,3.93,385,3.281,386,3.93,387,3.93]],["title/injectables/ProfileService.html",[60,0.926,360,1.684]],["body/injectables/ProfileService.html",[3,0.235,4,0.206,5,0.179,7,0.365,8,1.207,11,0.033,17,1.024,19,1.616,20,1.532,21,0.587,22,0.481,29,0.235,30,0.01,31,1.027,32,1.027,34,1.632,36,0.016,37,0.016,60,0.942,61,1.027,87,2.011,88,1.679,89,1.119,90,1.702,91,2.101,129,3.443,130,1.381,131,1.381,132,1.775,135,2.286,138,2.316,143,2.554,146,1.049,147,2.894,149,2.101,150,1.713,158,1.562,161,2.316,166,3.441,167,3.441,168,2.101,189,2.557,190,0.94,223,1.555,266,2.862,271,1.555,280,1.555,315,1.555,320,1.89,328,1.89,329,2.101,330,2.101,331,2.542,332,2.101,337,2.72,346,1.789,349,2.366,352,2.72,353,2.554,360,1.713,362,1.381,363,1.381,388,1.789,389,2.143,390,2.143,391,2.143,392,3.259,393,2.143,394,2.143,395,2.143,396,2.72,397,2.72,398,2.143,399,1.381,400,1.381,401,1.555,402,1.381,403,1.381,404,1.789,405,3.198,406,2.143,407,3.259,408,2.143,409,2.143,410,3.259,411,3.259,412,4.167,413,4.863,414,2.72,415,2.72,416,2.143,417,1.789,418,1.555,419,1.789,420,1.789,421,1.789,422,2.72,423,2.143,424,2.143,425,1.789,426,1.789,427,2.72,428,2.143,429,2.143,430,1.789]],["title/classes/UpdateProfileDto.html",[30,0.015,353,1.857]],["body/classes/UpdateProfileDto.html",[3,0.512,4,0.45,5,0.389,11,0.032,21,0.608,25,1.591,29,0.512,30,0.022,36,0.027,37,0.027,161,2.452,162,1.88,164,3.387,272,3.008,320,2.236,328,2.236,353,3.208,431,3.895,432,3.895,433,4.666]],["title/classes/UpdateUserDto.html",[30,0.015,434,1.857]],["body/classes/UpdateUserDto.html",[3,0.511,4,0.448,5,0.388,11,0.032,21,0.607,25,1.586,29,0.511,30,0.022,36,0.027,37,0.027,138,2.444,146,1.237,162,1.873,202,2.444,272,2.997,328,2.228,432,3.881,434,3.201,435,3.881,436,3.881,437,4.649]],["title/classes/User.html",[30,0.015,146,0.852]],["body/classes/User.html",[3,0.393,4,0.345,5,0.299,7,0.61,11,0.032,17,1.269,20,1.66,21,0.393,29,0.393,30,0.017,36,0.023,37,0.023,88,1.644,89,1.387,90,2.085,144,2.751,145,3.034,146,1.248,162,1.443,165,1.89,189,2.297,206,3.799,207,3.034,226,3.917,320,2.508,425,4.368,438,2.99,439,4.368,440,4.368,441,3.582,442,4.636,443,3.582,444,3.582,445,3.582,446,3.582,447,3.582,448,3.582,449,3.582,450,3.582,451,3.582]],["title/controllers/UserController.html",[0,1.29,452,2.065]],["body/controllers/UserController.html",[0,0.802,2,0.802,3,0.219,4,0.192,5,0.166,7,0.339,8,1.141,10,2.219,11,0.032,13,3.078,15,2.733,17,1.038,19,1.724,20,1.29,21,0.574,22,0.447,23,1.284,24,3.367,25,0.679,29,0.219,30,0.01,31,0.955,33,3.259,34,1.873,36,0.015,37,0.015,74,1.446,82,1.986,84,1.861,87,2.037,88,1.588,89,1.134,90,1.724,92,2.236,95,1.446,117,0.955,138,2.658,146,1.692,158,1.806,189,2.404,190,2.292,202,2.229,283,2.236,295,2.236,328,1.477,329,1.986,330,1.986,331,1.986,332,1.284,334,2.572,335,2.572,339,3.54,343,2.572,344,2.572,345,2.236,355,2.572,357,1.662,358,1.662,359,1.662,362,1.284,363,1.284,364,4.22,365,1.662,367,4.047,369,1.662,434,2.458,452,1.986,453,1.662,454,2.572,455,2.572,456,1.991,457,1.991,458,1.991,459,3.081,460,3.768,461,5.224,462,2.572,463,4.849,464,1.991,465,1.991,466,1.991,467,4.047,468,3.081,469,1.991,470,1.662,471,1.991,472,2.572,473,1.991,474,1.991,475,1.991,476,1.991,477,1.991,478,3.081,479,3.081,480,1.991,481,1.991,482,3.081,483,2.572,484,1.991,485,1.98,486,1.662,487,1.662,488,1.662,489,1.446,490,1.446,491,1.991,492,1.991,493,1.991,494,1.991,495,1.991,496,1.991,497,1.991,498,1.991,499,1.991,500,1.991,501,3.081,502,1.991,503,1.991,504,1.991,505,1.991,506,3.145,507,1.991,508,1.991,509,1.991,510,1.991,511,1.991,512,1.991]],["title/modules/UserModule.html",[38,1.187,48,1.857]],["body/modules/UserModule.html",[2,2.007,3,0.432,4,0.379,5,0.328,11,0.032,21,0.652,22,0.881,29,0.432,30,0.019,36,0.025,37,0.025,38,1.845,40,1.725,41,2.186,46,2.66,48,3.612,49,2.618,50,2.066,51,2.066,53,2.887,54,3.211,57,3.281,116,2.853,117,1.884,119,2.853,120,2.853,121,2.278,452,3.525,485,3.186,486,3.281,513,3.281,514,3.93,515,3.281,516,3.93,517,3.93]],["title/injectables/UserService.html",[60,0.926,485,1.684]],["body/injectables/UserService.html",[3,0.191,4,0.168,5,0.145,7,0.297,8,1.028,11,0.033,17,1.055,19,1.639,20,1.516,21,0.565,22,0.391,29,0.191,30,0.008,31,0.835,32,0.835,34,1.594,36,0.014,37,0.014,60,0.802,61,0.835,84,0.765,87,2.01,88,1.655,89,1.153,90,1.702,91,1.788,129,3.463,130,1.123,131,1.123,132,1.587,135,1.608,138,2.527,141,2.014,142,2.885,143,2.494,144,1.458,145,2.003,146,1.531,147,3.055,148,2.014,149,2.773,150,2.261,158,1.889,165,1.117,168,2.954,173,1.265,189,2.313,202,2.071,206,2.014,207,2.003,229,2.014,231,1.265,266,2.86,271,1.265,280,2.509,328,1.657,329,1.788,330,1.788,331,2.228,332,1.788,349,2.014,362,1.123,363,1.123,396,1.454,397,2.316,399,1.123,400,1.123,401,1.265,402,1.123,403,1.123,404,1.454,405,2.86,412,3.591,413,4.702,414,2.316,415,2.316,417,1.454,418,1.265,419,1.454,420,1.454,422,3.289,426,1.454,427,1.454,430,2.316,434,2.284,439,2.316,440,2.316,454,2.316,455,2.316,467,1.454,470,2.316,472,1.454,485,1.458,487,1.454,488,1.454,506,1.454,518,1.454,519,3.456,520,1.742,521,1.742,522,2.774,523,1.742,524,2.774,525,1.742,526,1.742,527,1.742,528,2.774,529,1.742,530,2.774,531,1.742,532,1.742,533,1.454,534,1.454,535,1.742,536,1.742,537,1.742,538,3.456,539,3.941,540,2.774,541,2.774,542,2.774,543,2.774,544,2.774,545,1.742,546,2.774,547,2.774,548,4.302,549,2.885,550,1.742,551,1.742,552,1.742,553,1.742,554,2.774,555,2.774,556,2.774,557,2.774,558,2.316,559,2.774,560,2.774,561,1.742,562,2.774,563,1.742]],["title/coverage.html",[564,3.635]],["body/coverage.html",[0,2.113,1,2.004,5,0.259,6,2.596,11,0.032,26,1.634,30,0.028,36,0.021,37,0.021,60,1.642,62,2.596,72,2.004,73,2.596,78,1.803,89,0.697,96,1.634,98,1.803,110,1.803,128,2.596,132,1.253,146,1.135,150,1.634,161,1.634,163,2.596,164,3.098,202,1.634,203,2.596,204,2.596,207,1.803,259,2.596,287,2.596,292,2.596,293,2.596,306,2.596,320,1.49,321,2.596,326,2.004,327,2.596,353,1.803,360,1.634,388,2.596,399,2.004,400,2.004,402,2.004,403,2.004,418,4.704,431,2.596,434,1.803,435,2.596,436,2.596,438,2.596,452,2.004,453,2.596,485,1.634,489,2.257,490,2.257,518,2.596,564,2.596,565,3.11,566,3.11,567,3.11,568,4.873,569,5.496,570,2.596,571,3.11,572,5.922,573,2.596,574,5.496,575,2.596,576,3.11,577,3.11,578,3.11,579,4.268,580,4.268,581,3.11,582,2.596,583,2.596,584,2.596,585,2.596,586,2.596,587,2.596,588,3.11,589,3.11]],["title/dependencies.html",[41,1.689,590,2.24]],["body/dependencies.html",[11,0.033,22,0.884,25,1.344,30,0.024,36,0.025,37,0.025,41,1.73,70,2.861,115,2.861,117,1.89,121,2.285,141,2.861,199,2.541,270,4.572,315,2.861,591,5.477,592,3.942,593,3.942,594,3.942,595,3.942,596,4.991,597,3.942,598,3.942,599,3.942,600,3.942,601,3.942,602,3.942,603,3.942,604,3.942,605,3.942,606,3.942,607,3.942,608,3.942,609,3.942,610,3.942,611,3.942,612,3.942,613,3.942,614,3.942,615,3.942,616,3.942,617,3.942,618,3.942,619,3.942,620,3.942,621,3.942,622,3.942,623,3.942,624,3.942,625,3.942]],["title/miscellaneous/functions.html",[626,1.555,627,3.212]],["body/miscellaneous/functions.html",[7,0.673,11,0.031,19,1.705,20,1.533,36,0.025,37,0.025,87,2.322,88,1.81,89,1.292,90,1.965,146,1.459,189,2.194,207,2.899,399,3.223,400,2.549,401,3.981,402,3.223,403,2.549,405,3.63,549,3.301,573,3.301,575,4.578,582,3.301,583,3.301,584,4.174,585,4.174,586,4.174,587,4.174,626,2.292,627,3.301,628,3.954,629,3.954,630,3.954,631,3.954,632,3.954,633,3.954,634,3.954,635,3.954,636,3.954,637,3.954]],["title/index.html",[7,0.457,638,2.24,639,2.24]],["body/index.html",[11,0.03,15,2.625,36,0.02,37,0.02,70,2.11,82,3.031,84,2.598,135,1.685,171,2.11,174,4.253,223,3.413,231,3.894,233,3.4,282,3.4,283,2.11,345,3.698,421,3.4,462,2.427,483,3.4,558,3.925,640,4.702,641,2.907,642,2.907,643,2.907,644,2.907,645,5.095,646,2.907,647,2.907,648,4.073,649,4.073,650,2.907,651,2.907,652,4.073,653,2.907,654,4.073,655,2.907,656,2.907,657,2.907,658,2.907,659,2.907,660,2.907,661,2.907,662,2.907,663,4.073,664,2.907,665,2.907,666,2.907,667,2.907,668,4.073,669,2.907,670,2.907,671,2.907,672,2.907,673,2.907,674,2.907,675,2.907,676,2.907,677,2.907,678,2.907,679,2.907,680,2.907,681,2.907,682,2.907,683,2.907,684,2.907,685,4.073,686,2.907,687,2.907,688,2.907,689,2.907,690,4.073,691,2.907,692,2.907,693,2.907,694,4.073,695,2.907,696,4.073,697,2.907,698,4.702,699,2.907,700,2.907,701,2.907,702,2.907,703,2.907,704,2.907,705,2.907,706,4.073,707,2.907,708,2.907,709,2.907,710,2.907,711,2.907,712,2.907,713,2.907,714,2.907,715,2.907,716,2.907,717,2.907,718,2.907,719,2.907,720,2.907,721,2.907,722,2.907,723,2.907,724,2.907,725,4.073,726,2.907,727,2.427,728,2.427,729,1.874,730,2.11,731,2.427,732,2.907,733,2.907,734,2.907,735,2.907,736,2.907,737,2.907,738,2.907,739,2.907,740,2.907,741,2.907,742,2.907,743,2.907,744,2.907,745,2.907,746,2.907,747,2.907,748,2.907,749,2.907,750,2.907,751,2.907,752,2.907,753,4.073,754,2.907,755,2.907,756,2.907]],["title/license.html",[638,2.24,639,2.24,729,1.73]],["body/license.html",[4,0.477,5,0.274,11,0.028,17,0.164,21,0.157,36,0.01,37,0.007,88,0.251,146,0.213,150,1.43,201,0.753,328,1.304,442,1.196,626,0.464,727,1.975,728,2.524,729,3.936,730,3.426,731,1.975,757,0.801,758,1.432,759,5.572,760,4.801,761,3.024,762,1.432,763,2.366,764,3.024,765,0.801,766,0.801,767,0.801,768,0.801,769,5.629,770,5.68,771,0.801,772,1.944,773,3.511,774,0.801,775,1.432,776,3.024,777,0.801,778,2.721,779,0.801,780,0.801,781,5.012,782,5.404,783,1.944,784,1.944,785,4.045,786,2.721,787,3.284,788,5.51,789,3.024,790,0.801,791,3.284,792,0.801,793,0.801,794,0.801,795,3.024,796,4.186,797,4.313,798,1.944,799,4.045,800,2.366,801,1.944,802,5.601,803,4.947,804,0.801,805,0.801,806,4.045,807,0.801,808,3.024,809,0.801,810,0.801,811,0.801,812,0.801,813,0.801,814,0.801,815,0.801,816,1.944,817,1.432,818,1.432,819,3.024,820,1.432,821,3.024,822,1.944,823,1.944,824,1.432,825,0.801,826,4.429,827,1.432,828,0.801,829,0.801,830,0.801,831,0.801,832,0.801,833,0.801,834,0.801,835,0.801,836,3.887,837,3.511,838,0.801,839,2.721,840,3.511,841,0.801,842,0.801,843,0.801,844,1.432,845,1.432,846,0.801,847,0.801,848,0.801,849,1.432,850,1.432,851,0.801,852,1.944,853,1.944,854,0.801,855,2.721,856,0.801,857,0.801,858,0.801,859,3.024,860,0.801,861,0.801,862,0.801,863,0.801,864,0.801,865,0.801,866,0.801,867,0.801,868,0.801,869,0.801,870,1.432,871,0.801,872,0.801,873,0.801,874,1.432,875,1.432,876,0.801,877,0.801,878,0.801,879,1.944,880,2.366,881,1.944,882,2.366,883,0.801,884,0.801,885,0.801,886,0.801,887,0.801,888,0.801,889,3.024,890,1.944,891,1.432,892,0.801,893,0.801,894,0.801,895,1.432,896,2.721,897,0.801,898,0.801,899,0.801,900,0.801,901,3.024,902,0.801,903,2.366,904,1.432,905,0.801,906,0.801,907,3.71,908,0.801,909,0.801,910,2.366,911,1.944,912,0.801,913,1.944,914,0.801,915,1.432,916,3.71,917,4.045,918,1.944,919,1.944,920,1.432,921,1.432,922,0.801,923,2.366,924,0.801,925,0.801,926,2.721,927,1.432,928,3.024,929,0.801,930,0.801,931,0.801,932,1.944,933,0.801,934,0.801,935,0.801,936,0.801,937,1.944,938,0.801,939,3.284,940,0.801,941,0.801,942,0.801,943,0.801,944,0.801,945,0.801,946,1.944,947,3.024,948,1.432,949,1.944,950,0.801,951,1.944,952,0.801,953,1.432,954,1.432,955,0.801,956,1.432,957,1.432,958,1.944,959,0.801,960,0.801,961,1.432,962,0.801,963,0.801,964,0.801,965,0.801,966,0.801,967,1.944,968,0.801,969,1.432,970,1.432,971,1.944,972,0.801,973,0.801,974,0.801,975,0.801,976,1.432,977,1.944,978,1.432,979,0.801,980,0.801,981,1.432,982,2.721,983,2.366,984,1.944,985,1.944,986,1.432,987,2.366,988,0.801,989,1.944,990,0.801,991,0.801,992,1.432,993,1.432,994,2.366,995,0.801,996,0.801,997,2.366,998,2.366,999,0.801,1000,0.801,1001,1.432,1002,0.801,1003,0.801,1004,3.024,1005,1.432,1006,0.801,1007,1.432,1008,3.511,1009,3.71,1010,0.801,1011,0.801,1012,0.801,1013,0.801,1014,0.801,1015,0.801,1016,0.801,1017,0.801,1018,0.801,1019,1.432,1020,0.801,1021,1.623,1022,1.944,1023,0.801,1024,1.432,1025,0.801,1026,0.801,1027,0.801,1028,0.801,1029,0.801,1030,0.801,1031,0.801,1032,0.801,1033,1.432,1034,0.801,1035,1.944,1036,0.801,1037,1.432,1038,1.944,1039,2.366,1040,0.801,1041,0.801,1042,0.801,1043,0.801,1044,0.801,1045,0.801,1046,0.801,1047,0.801,1048,0.801,1049,0.801,1050,0.801,1051,0.801,1052,0.801,1053,0.801,1054,0.801,1055,2.366,1056,1.432,1057,1.432,1058,0.801,1059,0.801,1060,1.432,1061,1.432,1062,0.801,1063,0.801,1064,0.801,1065,0.801,1066,0.801,1067,0.801,1068,1.432,1069,0.801,1070,0.801,1071,2.366,1072,1.944,1073,0.801,1074,1.432,1075,0.801,1076,0.801,1077,0.801,1078,0.801,1079,1.432,1080,0.801,1081,0.801,1082,1.432,1083,0.801,1084,2.366,1085,1.944,1086,0.801,1087,0.801,1088,0.801,1089,1.432,1090,0.801,1091,0.801,1092,0.801,1093,1.432,1094,1.432,1095,0.801,1096,0.801,1097,0.801,1098,0.801,1099,0.801,1100,3.887,1101,0.801,1102,0.801,1103,0.801,1104,0.801,1105,1.432,1106,0.801,1107,0.801,1108,0.801,1109,1.944,1110,0.801,1111,0.801,1112,0.801,1113,0.801,1114,0.801,1115,0.801,1116,0.801,1117,0.801,1118,0.801,1119,0.801,1120,0.801,1121,0.801,1122,0.801,1123,0.801,1124,0.801,1125,0.801,1126,0.801,1127,0.801,1128,0.801,1129,0.801,1130,0.801,1131,0.801,1132,0.801,1133,0.801,1134,0.801,1135,1.432,1136,0.801,1137,0.801,1138,0.801,1139,1.432,1140,1.432,1141,2.721,1142,0.801,1143,0.801,1144,0.801,1145,0.801,1146,0.801,1147,0.801,1148,0.801,1149,0.801,1150,0.801,1151,0.801,1152,0.801,1153,0.801,1154,0.801,1155,0.801,1156,0.801,1157,1.432,1158,0.801,1159,0.801,1160,0.801,1161,0.801,1162,1.944,1163,0.801,1164,0.801,1165,0.801,1166,1.432,1167,0.801,1168,0.801,1169,0.801,1170,0.801,1171,0.801,1172,0.801,1173,0.801,1174,0.801,1175,0.801,1176,0.801,1177,0.801,1178,0.801,1179,0.801,1180,0.801,1181,0.801,1182,0.801,1183,0.801,1184,0.801,1185,0.801,1186,1.432,1187,0.801,1188,0.801,1189,1.432,1190,0.801,1191,0.801,1192,0.801,1193,0.801,1194,0.801,1195,0.801,1196,0.801,1197,0.801,1198,0.801,1199,0.801,1200,0.801,1201,2.366,1202,1.432,1203,0.801,1204,0.801,1205,0.801,1206,0.801,1207,0.801,1208,0.801,1209,0.801,1210,1.944,1211,0.801,1212,0.801,1213,0.801,1214,0.801,1215,0.801,1216,0.801,1217,0.801,1218,1.432,1219,0.801,1220,0.801,1221,0.801,1222,0.801,1223,0.801,1224,0.801,1225,0.801,1226,0.801,1227,0.801,1228,0.801,1229,0.801]],["title/modules.html",[40,1.911]],["body/modules.html",[11,0.027,36,0.027,37,0.027,39,2.986,40,2.033,45,2.685,46,2.033,47,2.685,48,2.685,1021,5.191,1230,6.218,1231,6.218,1232,6.218]],["title/overview.html",[1233,3.635]],["body/overview.html",[2,1.447,11,0.032,26,2.754,36,0.023,37,0.023,39,4.08,40,1.576,41,2.063,42,2.999,43,2.999,44,2.999,45,3.586,46,2.715,47,3.496,48,3.496,49,2.471,50,1.888,51,1.888,61,1.722,96,2.754,107,2.999,109,2.999,110,3.038,132,2.43,162,1.447,300,2.999,301,2.999,302,2.999,360,2.754,383,2.999,385,2.999,485,2.754,513,2.999,515,2.999,1233,2.999,1234,3.592,1235,3.592,1236,3.592,1237,3.592]],["title/properties.html",[165,1.55,590,2.24]],["body/properties.html",[11,0.032,36,0.028,37,0.028,165,1.972,201,2.573,729,3.155,730,3.553,1238,4.895,1239,4.895,1240,4.895]],["title/miscellaneous/variables.html",[626,1.555,1241,3.212]],["body/miscellaneous/variables.html",[7,0.769,11,0.032,34,1.674,36,0.027,37,0.027,143,3.148,146,1.549,157,3.281,158,2.603,159,3.281,489,3.942,490,3.281,533,3.773,534,3.773,570,4.533,626,2.62,1241,3.773,1242,4.519,1243,4.519,1244,4.519,1245,4.519,1246,4.519,1247,4.519,1248,4.519]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":418,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1238,"title":{},"body":{"properties.html":{}}}],["0.0.41",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["0.5.3",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["00000476",{"_index":192,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["04",{"_index":642,"title":{},"body":{"index.html":{}}}],["1.0.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":758,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":828,"title":{},"body":{"license.html":{}}}],["1.12",{"_index":851,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":861,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":863,"title":{},"body":{"license.html":{}}}],["1.2",{"_index":771,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":779,"title":{},"body":{"license.html":{}}}],["1.4",{"_index":780,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":794,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":807,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":813,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":815,"title":{},"body":{"license.html":{}}}],["10",{"_index":546,"title":{},"body":{"injectables/UserService.html":{}}}],["10.1",{"_index":1199,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":956,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":1202,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":1216,"title":{},"body":{"license.html":{}}}],["11",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["11)@matches(/^[0",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12",{"_index":184,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["12)@apiproperty({description",{"_index":180,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["16.0.1",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":925,"title":{},"body":{"license.html":{}}}],["2.0",{"_index":731,"title":{},"body":{"index.html":{},"license.html":{}}}],["2.0.18",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":855,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":931,"title":{},"body":{"license.html":{}}}],["2.2",{"_index":914,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":922,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":950,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":959,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":966,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":975,"title":{},"body":{"license.html":{}}}],["2.8.5",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["204",{"_index":430,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["24h",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["3",{"_index":183,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["3.0",{"_index":857,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":977,"title":{},"body":{"license.html":{}}}],["3.14.0",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":978,"title":{},"body":{"license.html":{}}}],["3.3",{"_index":958,"title":{},"body":{"license.html":{}}}],["3.4",{"_index":949,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":1017,"title":{},"body":{"license.html":{}}}],["30",{"_index":1080,"title":{},"body":{"license.html":{}}}],["4",{"_index":1235,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1234,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":1056,"title":{},"body":{"license.html":{}}}],["5.2",{"_index":1082,"title":{},"body":{"license.html":{}}}],["5.2.1",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["5.3",{"_index":1101,"title":{},"body":{"license.html":{}}}],["50",{"_index":885,"title":{},"body":{"license.html":{}}}],["6",{"_index":1236,"title":{},"body":{"overview.html":{}}}],["60",{"_index":1073,"title":{},"body":{"license.html":{}}}],["61327389088",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["7.2.0",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1237,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_count",{"_index":424,"title":{},"body":{"injectables/ProfileService.html":{}}}],["ability",{"_index":1181,"title":{},"body":{"license.html":{}}}],["above",{"_index":932,"title":{},"body":{"license.html":{}}}],["absence",{"_index":941,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1025,"title":{},"body":{"license.html":{}}}],["account",{"_index":506,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["account')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":460,"title":{},"body":{"controllers/UserController.html":{}}}],["accurate",{"_index":1229,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1092,"title":{},"body":{"license.html":{}}}],["add",{"_index":1228,"title":{},"body":{"license.html":{}}}],["addition",{"_index":830,"title":{},"body":{"license.html":{}}}],["additional",{"_index":926,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":1000,"title":{},"body":{"license.html":{}}}],["adicionar",{"_index":654,"title":{},"body":{"index.html":{}}}],["adicione",{"_index":752,"title":{},"body":{"index.html":{}}}],["adm",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["admin",{"_index":467,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["affect",{"_index":1044,"title":{},"body":{"license.html":{}}}],["affero",{"_index":856,"title":{},"body":{"license.html":{}}}],["against",{"_index":1085,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1030,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1184,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":1104,"title":{},"body":{"license.html":{}}}],["ainda",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["alguém",{"_index":742,"title":{},"body":{"index.html":{}}}],["alleging",{"_index":1095,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1165,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1029,"title":{},"body":{"license.html":{}}}],["alta",{"_index":749,"title":{},"body":{"index.html":{}}}],["alter",{"_index":987,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1136,"title":{},"body":{"license.html":{}}}],["ao",{"_index":667,"title":{},"body":{"index.html":{}}}],["api",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":364,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":194,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":208,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apitags('login",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('profile",{"_index":366,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('status",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":492,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":313,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":319,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apparatus",{"_index":843,"title":{},"body":{"license.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":970,"title":{},"body":{"license.html":{}}}],["application",{"_index":1018,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1157,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":26,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["após",{"_index":707,"title":{},"body":{"index.html":{}}}],["arquivo",{"_index":698,"title":{},"body":{"index.html":{}}}],["asserting",{"_index":1086,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1125,"title":{},"body":{"license.html":{}}}],["async",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["attached",{"_index":784,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":986,"title":{},"body":{"license.html":{}}}],["autenticado",{"_index":284,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["auth",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":72,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":365,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":45,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1240,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1131,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":96,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1058,"title":{},"body":{"license.html":{}}}],["autores",{"_index":718,"title":{},"body":{"index.html":{}}}],["available",{"_index":801,"title":{},"body":{"license.html":{}}}],["await",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["b",{"_index":799,"title":{},"body":{"license.html":{}}}],["back",{"_index":1076,"title":{},"body":{"license.html":{}}}],["backend",{"_index":644,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":536,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":540,"title":{},"body":{"injectables/UserService.html":{}}}],["banco",{"_index":704,"title":{},"body":{"index.html":{}}}],["basis",{"_index":910,"title":{},"body":{"license.html":{}}}],["bck",{"_index":687,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":545,"title":{},"body":{"injectables/UserService.html":{}}}],["become",{"_index":919,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":1024,"title":{},"body":{"license.html":{}}}],["believes",{"_index":962,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":888,"title":{},"body":{"license.html":{}}}],["bestiario.git",{"_index":689,"title":{},"body":{"index.html":{}}}],["bestiário",{"_index":648,"title":{},"body":{"index.html":{}}}],["blue",{"_index":646,"title":{},"body":{"index.html":{}}}],["body",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bring",{"_index":1182,"title":{},"body":{"license.html":{}}}],["brought",{"_index":1168,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1232,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1230,"title":{},"body":{"modules.html":{}}}],["bruno",{"_index":719,"title":{},"body":{"index.html":{}}}],["bruxodorole476",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["business",{"_index":1174,"title":{},"body":{"license.html":{}}}],["c",{"_index":940,"title":{},"body":{"license.html":{}}}],["cadastrados",{"_index":420,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["caracter",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["case",{"_index":790,"title":{},"body":{"license.html":{}}}],["catch(handleerror",{"_index":414,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cause",{"_index":876,"title":{},"body":{"license.html":{}}}],["caused",{"_index":935,"title":{},"body":{"license.html":{}}}],["cerveja",{"_index":744,"title":{},"body":{"index.html":{}}}],["character",{"_index":1142,"title":{},"body":{"license.html":{}}}],["charge",{"_index":992,"title":{},"body":{"license.html":{}}}],["check",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["choice",{"_index":954,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1019,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1132,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1088,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":838,"title":{},"body":{"license.html":{}}}],["claims",{"_index":837,"title":{},"body":{"license.html":{}}}],["class",{"_index":30,"title":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":162,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1026,"title":{},"body":{"license.html":{}}}],["clonando",{"_index":683,"title":{},"body":{"index.html":{}}}],["clone",{"_index":685,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":300,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":301,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":302,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":383,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":384,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":385,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":513,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":514,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":515,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":781,"title":{},"body":{"license.html":{}}}],["com",{"_index":558,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["combination",{"_index":772,"title":{},"body":{"license.html":{}}}],["combines",{"_index":809,"title":{},"body":{"license.html":{}}}],["come",{"_index":1075,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1151,"title":{},"body":{"license.html":{}}}],["common",{"_index":869,"title":{},"body":{"license.html":{}}}],["completando",{"_index":703,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1183,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1071,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":1060,"title":{},"body":{"license.html":{}}}],["comply",{"_index":947,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":1148,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1185,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":890,"title":{},"body":{"license.html":{}}}],["confirmação",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":205,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["conflict",{"_index":1177,"title":{},"body":{"license.html":{}}}],["connect",{"_index":408,"title":{},"body":{"injectables/ProfileService.html":{}}}],["consequential",{"_index":1140,"title":{},"body":{"license.html":{}}}],["const",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1129,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["construe",{"_index":1198,"title":{},"body":{"license.html":{}}}],["construed",{"_index":1196,"title":{},"body":{"license.html":{}}}],["construído",{"_index":714,"title":{},"body":{"index.html":{}}}],["conta",{"_index":461,"title":{},"body":{"controllers/UserController.html":{}}}],["contained",{"_index":1010,"title":{},"body":{"license.html":{}}}],["contains",{"_index":834,"title":{},"body":{"license.html":{}}}],["conte",{"_index":737,"title":{},"body":{"index.html":{}}}],["contents",{"_index":833,"title":{},"body":{"license.html":{}}}],["conter",{"_index":182,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["contract",{"_index":879,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":980,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":766,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":778,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":773,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":759,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":777,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1099,"title":{},"body":{"license.html":{}}}],["control",{"_index":870,"title":{},"body":{"license.html":{}}}],["controlar",{"_index":678,"title":{},"body":{"index.html":{}}}],["controlled",{"_index":868,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":368,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('user",{"_index":493,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controls",{"_index":867,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":827,"title":{},"body":{"license.html":{}}}],["convide",{"_index":741,"title":{},"body":{"index.html":{}}}],["copy",{"_index":985,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":971,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1128,"title":{},"body":{"license.html":{}}}],["cors",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":993,"title":{},"body":{"license.html":{}}}],["counter",{"_index":1093,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1169,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":564,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":769,"title":{},"body":{"license.html":{}}}],["cpf",{"_index":206,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["create",{"_index":328,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["create(@body",{"_index":369,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["create(dto",{"_index":332,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":439,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["createparamdecorator((_",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprofiledto",{"_index":161,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["creates",{"_index":765,"title":{},"body":{"license.html":{}}}],["createuserdto",{"_index":202,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":767,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":964,"title":{},"body":{"license.html":{}}}],["criar",{"_index":334,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["criaturas",{"_index":656,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1094,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curso",{"_index":643,"title":{},"body":{"index.html":{}}}],["d",{"_index":747,"title":{},"body":{"index.html":{}}}],["da",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"index.html":{}}}],["dados",{"_index":483,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["damages",{"_index":1141,"title":{},"body":{"license.html":{}}}],["das",{"_index":708,"title":{},"body":{"index.html":{}}}],["data",{"_index":405,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["data.password",{"_index":562,"title":{},"body":{"injectables/UserService.html":{}}}],["datatreatment",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["datatreatment(data",{"_index":633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":442,"title":{},"body":{"classes/User.html":{},"license.html":{}}}],["days",{"_index":1074,"title":{},"body":{"license.html":{}}}],["de",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dealing",{"_index":973,"title":{},"body":{"license.html":{}}}],["death",{"_index":1158,"title":{},"body":{"license.html":{}}}],["declaratory",{"_index":1090,"title":{},"body":{"license.html":{}}}],["declaração",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":533,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["defective",{"_index":1124,"title":{},"body":{"license.html":{}}}],["defects",{"_index":1114,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":1170,"title":{},"body":{"license.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["definition",{"_index":872,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":757,"title":{},"body":{"license.html":{}}}],["deletado",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["deletar",{"_index":339,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete('/my",{"_index":459,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":380,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":338,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('user/:id",{"_index":503,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('user/:id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":466,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@loggeduser",{"_index":511,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":381,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete(id",{"_index":337,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["delete(user",{"_index":458,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(userid",{"_index":522,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser",{"_index":454,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@loggeduser",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":524,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(user",{"_index":465,"title":{},"body":{"controllers/UserController.html":{}}}],["deletion",{"_index":831,"title":{},"body":{"license.html":{}}}],["dependencias",{"_index":694,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":1043,"title":{},"body":{"license.html":{}}}],["described",{"_index":798,"title":{},"body":{"license.html":{}}}],["description",{"_index":201,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"license.html":{},"properties.html":{}}}],["descrição",{"_index":669,"title":{},"body":{"index.html":{}}}],["desirable",{"_index":1222,"title":{},"body":{"license.html":{}}}],["detailed",{"_index":1051,"title":{},"body":{"license.html":{}}}],["detalhes",{"_index":734,"title":{},"body":{"index.html":{}}}],["detentor",{"_index":191,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["determinado",{"_index":347,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deve",{"_index":172,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["different",{"_index":996,"title":{},"body":{"license.html":{}}}],["differs",{"_index":1215,"title":{},"body":{"license.html":{}}}],["dinyu",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["direct",{"_index":874,"title":{},"body":{"license.html":{}}}],["direction",{"_index":877,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1096,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1226,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1109,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":1007,"title":{},"body":{"license.html":{}}}],["display",{"_index":905,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":1205,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":907,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1220,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":921,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1217,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":928,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":1048,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":1105,"title":{},"body":{"license.html":{}}}],["diversas",{"_index":657,"title":{},"body":{"index.html":{}}}],["docs",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["doctrines",{"_index":972,"title":{},"body":{"license.html":{}}}],["document",{"_index":814,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["drafter",{"_index":1197,"title":{},"body":{"license.html":{}}}],["dto",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":539,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.imageurl",{"_index":410,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto.password",{"_index":538,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.title",{"_index":407,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto.ts",{"_index":204,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto.ts:17",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto.ts:29",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto.ts:35",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto.ts:45",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto.ts:51",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dto.userid",{"_index":409,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto/create",{"_index":362,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":363,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":1037,"title":{},"body":{"license.html":{}}}],["e",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["e/ou",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["each",{"_index":761,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":804,"title":{},"body":{"license.html":{}}}],["editar",{"_index":355,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["edtech",{"_index":647,"title":{},"body":{"index.html":{}}}],["effect",{"_index":1207,"title":{},"body":{"license.html":{}}}],["effective",{"_index":915,"title":{},"body":{"license.html":{}}}],["ela",{"_index":660,"title":{},"body":{"index.html":{}}}],["em",{"_index":681,"title":{},"body":{"index.html":{}}}],["email",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["enableshutdownhooks",{"_index":308,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":310,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":1103,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":1193,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1119,"title":{},"body":{"license.html":{}}}],["entities",{"_index":865,"title":{},"body":{"license.html":{}}}],["entities/profile.entity",{"_index":398,"title":{},"body":{"injectables/ProfileService.html":{}}}],["entities/user.entity",{"_index":487,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":764,"title":{},"body":{"license.html":{}}}],["entre",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["env",{"_index":699,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":702,"title":{},"body":{"index.html":{}}}],["equipe",{"_index":743,"title":{},"body":{"index.html":{}}}],["equivalents",{"_index":974,"title":{},"body":{"license.html":{}}}],["error",{"_index":401,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["error.ts",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["especial",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["essential",{"_index":1130,"title":{},"body":{"license.html":{}}}],["est",{"_index":283,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"index.html":{}}}],["este",{"_index":421,"title":{},"body":{"injectables/ProfileService.html":{},"index.html":{}}}],["etc",{"_index":756,"title":{},"body":{"index.html":{}}}],["even",{"_index":1153,"title":{},"body":{"license.html":{}}}],["event",{"_index":1102,"title":{},"body":{"license.html":{}}}],["example",{"_index":176,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["except",{"_index":939,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1089,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1166,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":897,"title":{},"body":{"license.html":{}}}],["executable",{"_index":787,"title":{},"body":{"license.html":{}}}],["executando",{"_index":705,"title":{},"body":{"index.html":{}}}],["executar",{"_index":709,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exemplo",{"_index":701,"title":{},"body":{"index.html":{}}}],["exercising",{"_index":864,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":786,"title":{},"body":{"license.html":{}}}],["existe",{"_index":281,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existem",{"_index":419,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["expiresin",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["explicitly",{"_index":1065,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":908,"title":{},"body":{"license.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":304,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["expressed",{"_index":1111,"title":{},"body":{"license.html":{}}}],["expressões",{"_index":735,"title":{},"body":{"index.html":{}}}],["extends",{"_index":272,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["extent",{"_index":821,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":268,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":276,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factual",{"_index":1015,"title":{},"body":{"license.html":{}}}],["fail",{"_index":1059,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1069,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1149,"title":{},"body":{"license.html":{}}}],["fair",{"_index":967,"title":{},"body":{"license.html":{}}}],["false",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["fee",{"_index":1020,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":883,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":812,"title":{},"body":{"license.html":{}}}],["finally",{"_index":1066,"title":{},"body":{"license.html":{}}}],["findall",{"_index":329,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@loggeduser",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["findall(@param('userid",{"_index":372,"title":{},"body":{"controllers/ProfileController.html":{}}}],["findall(id",{"_index":341,"title":{},"body":{"controllers/ProfileController.html":{}}}],["findall(user",{"_index":470,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(userid",{"_index":392,"title":{},"body":{"injectables/ProfileService.html":{}}}],["findone",{"_index":330,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@loggeduser",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":375,"title":{},"body":{"controllers/ProfileController.html":{}}}],["findone(id",{"_index":349,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["findone(user",{"_index":474,"title":{},"body":{"controllers/UserController.html":{}}}],["first",{"_index":920,"title":{},"body":{"license.html":{}}}],["fit",{"_index":1116,"title":{},"body":{"license.html":{}}}],["following",{"_index":829,"title":{},"body":{"license.html":{}}}],["form",{"_index":782,"title":{},"body":{"license.html":{}}}],["foto",{"_index":170,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["found",{"_index":404,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["found.ts",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["foundation",{"_index":1200,"title":{},"body":{"license.html":{}}}],["fraca",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["free",{"_index":895,"title":{},"body":{"license.html":{}}}],["function",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":627,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1003,"title":{},"body":{"license.html":{}}}],["game",{"_index":682,"title":{},"body":{"index.html":{}}}],["games",{"_index":661,"title":{},"body":{"index.html":{}}}],["general",{"_index":853,"title":{},"body":{"license.html":{}}}],["gerado",{"_index":294,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get('/my",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/profiles/:userid",{"_index":371,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/profiles/:userid')@apioperation({summary",{"_index":342,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id",{"_index":374,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':id')@apioperation({summary",{"_index":350,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('user",{"_index":496,"title":{},"body":{"controllers/UserController.html":{}}}],["get('user')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":471,"title":{},"body":{"controllers/UserController.html":{}}}],["get('user/:id",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["get('user/:id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":475,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":638,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":684,"title":{},"body":{"index.html":{}}}],["given",{"_index":1204,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":852,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":1146,"title":{},"body":{"license.html":{}}}],["gostaria",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["governed",{"_index":983,"title":{},"body":{"license.html":{}}}],["grant",{"_index":819,"title":{},"body":{"license.html":{}}}],["granted",{"_index":916,"title":{},"body":{"license.html":{}}}],["grants",{"_index":889,"title":{},"body":{"license.html":{}}}],["gratidão",{"_index":736,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":399,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["having",{"_index":817,"title":{},"body":{"license.html":{}}}],["held",{"_index":1190,"title":{},"body":{"license.html":{}}}],["henrique",{"_index":723,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":891,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":1188,"title":{},"body":{"license.html":{}}}],["honaru",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["honaru.dinyu@gmail.com",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["honaru476",{"_index":186,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":1221,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":396,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["httpexception('usuário",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["https://github.com/phcpedro",{"_index":724,"title":{},"body":{"index.html":{}}}],["https://github.com/suicarrot",{"_index":721,"title":{},"body":{"index.html":{}}}],["https://github.com/suicarrot/blue",{"_index":686,"title":{},"body":{"index.html":{}}}],["https://i.pinimg.com/564x/aa/b0/08/aab008925049c314ab09a39aca5f4d88.jpg",{"_index":177,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["https://steamcommunity.com/profiles/76561198044920869",{"_index":754,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["icrie",{"_index":697,"title":{},"body":{"index.html":{}}}],["id",{"_index":189,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":544,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ii",{"_index":938,"title":{},"body":{"license.html":{}}}],["imageurl",{"_index":166,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{}}}],["imaginação",{"_index":665,"title":{},"body":{"index.html":{}}}],["implements",{"_index":316,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":927,"title":{},"body":{"license.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["impossible",{"_index":1040,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1036,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1016,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1139,"title":{},"body":{"license.html":{}}}],["include",{"_index":1033,"title":{},"body":{"license.html":{}}}],["included",{"_index":1047,"title":{},"body":{"license.html":{}}}],["includes",{"_index":866,"title":{},"body":{"license.html":{}}}],["including",{"_index":791,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":795,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1032,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1031,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1022,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":875,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":1097,"title":{},"body":{"license.html":{}}}],["individual",{"_index":762,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":311,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":981,"title":{},"body":{"license.html":{}}}],["informadas",{"_index":542,"title":{},"body":{"injectables/UserService.html":{}}}],["informações",{"_index":479,"title":{},"body":{"controllers/UserController.html":{}}}],["informed",{"_index":1155,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":844,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1087,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":934,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":1098,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":1118,"title":{},"body":{"license.html":{}}}],["inimigos",{"_index":679,"title":{},"body":{"index.html":{}}}],["initial",{"_index":783,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":1083,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":60,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injury",{"_index":1160,"title":{},"body":{"license.html":{}}}],["instalação",{"_index":690,"title":{},"body":{"index.html":{}}}],["instale",{"_index":693,"title":{},"body":{"index.html":{}}}],["intellectual",{"_index":898,"title":{},"body":{"license.html":{}}}],["intended",{"_index":968,"title":{},"body":{"license.html":{}}}],["invenções",{"_index":676,"title":{},"body":{"index.html":{}}}],["inválido",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inválido.'})@apiproperty({description",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inválidos",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":207,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isadmin(user",{"_index":549,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["isemail",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@apiproperty({description",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":291,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring",{"_index":195,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":288,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@length(3",{"_index":179,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isurl",{"_index":196,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isurl()@apiproperty({description",{"_index":169,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isuuid",{"_index":197,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":188,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isvalid",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["javascript",{"_index":715,"title":{},"body":{"index.html":{}}}],["judgment",{"_index":1091,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":1041,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":1035,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1164,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":110,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":1110,"title":{},"body":{"license.html":{}}}],["known",{"_index":1014,"title":{},"body":{"license.html":{}}}],["language",{"_index":1195,"title":{},"body":{"license.html":{}}}],["larger",{"_index":808,"title":{},"body":{"license.html":{}}}],["later",{"_index":858,"title":{},"body":{"license.html":{}}}],["law",{"_index":1162,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1175,"title":{},"body":{"license.html":{}}}],["legal",{"_index":763,"title":{},"body":{"license.html":{}}}],["length",{"_index":198,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["length(11",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(3",{"_index":200,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["lesser",{"_index":854,"title":{},"body":{"license.html":{}}}],["letras",{"_index":185,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["liability",{"_index":1009,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1137,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":816,"title":{},"body":{"license.html":{}}}],["license",{"_index":729,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["license(s",{"_index":1001,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":805,"title":{},"body":{"license.html":{}}}],["license.md",{"_index":733,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":797,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":929,"title":{},"body":{"license.html":{}}}],["licença",{"_index":725,"title":{},"body":{"index.html":{}}}],["limit",{"_index":969,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":840,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":923,"title":{},"body":{"license.html":{}}}],["list",{"_index":415,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["list.length",{"_index":417,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["lista",{"_index":673,"title":{},"body":{"index.html":{}}}],["listar",{"_index":343,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":1084,"title":{},"body":{"license.html":{}}}],["livros",{"_index":662,"title":{},"body":{"index.html":{}}}],["local",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["location",{"_index":1224,"title":{},"body":{"license.html":{}}}],["logada",{"_index":463,"title":{},"body":{"controllers/UserController.html":{}}}],["loggeduser",{"_index":489,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(dto",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(logindto",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":78,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":98,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logos",{"_index":945,"title":{},"body":{"license.html":{}}}],["look",{"_index":1227,"title":{},"body":{"license.html":{}}}],["loss",{"_index":1145,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1152,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1143,"title":{},"body":{"license.html":{}}}],["lucca",{"_index":720,"title":{},"body":{"index.html":{}}}],["made",{"_index":800,"title":{},"body":{"license.html":{}}}],["maintains",{"_index":1171,"title":{},"body":{"license.html":{}}}],["maiúsculas",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["make",{"_index":903,"title":{},"body":{"license.html":{}}}],["makes",{"_index":952,"title":{},"body":{"license.html":{}}}],["making",{"_index":845,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1150,"title":{},"body":{"license.html":{}}}],["management",{"_index":878,"title":{},"body":{"license.html":{}}}],["manner",{"_index":991,"title":{},"body":{"license.html":{}}}],["maquina",{"_index":692,"title":{},"body":{"index.html":{}}}],["marks",{"_index":944,"title":{},"body":{"license.html":{}}}],["matches",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[0",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":810,"title":{},"body":{"license.html":{}}}],["matter",{"_index":1187,"title":{},"body":{"license.html":{}}}],["maximum",{"_index":820,"title":{},"body":{"license.html":{}}}],["means",{"_index":760,"title":{},"body":{"license.html":{}}}],["merchantable",{"_index":1115,"title":{},"body":{"license.html":{}}}],["message",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{}}}],["metadata",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":841,"title":{},"body":{"license.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6)@isstring()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minúsculas",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":626,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["mod05",{"_index":688,"title":{},"body":{"index.html":{}}}],["modification",{"_index":832,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":789,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1210,"title":{},"body":{"license.html":{}}}],["modify",{"_index":904,"title":{},"body":{"license.html":{}}}],["modo",{"_index":677,"title":{},"body":{"index.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monstros",{"_index":655,"title":{},"body":{"index.html":{}}}],["more",{"_index":882,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":1077,"title":{},"body":{"license.html":{}}}],["mortos",{"_index":680,"title":{},"body":{"index.html":{}}}],["mozilla",{"_index":727,"title":{},"body":{"index.html":{},"license.html":{}}}],["mpl",{"_index":1219,"title":{},"body":{"license.html":{}}}],["muito",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myaccount",{"_index":455,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["myaccount(@loggeduser",{"_index":507,"title":{},"body":{"controllers/UserController.html":{}}}],["myaccount(user",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["myaccount(userid",{"_index":528,"title":{},"body":{"injectables/UserService.html":{}}}],["mão",{"_index":674,"title":{},"body":{"index.html":{}}}],["módulo",{"_index":641,"title":{},"body":{"index.html":{}}}],["n",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["na",{"_index":645,"title":{},"body":{"index.html":{}}}],["name",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["necessary",{"_index":946,"title":{},"body":{"license.html":{}}}],["necessário",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["negligence",{"_index":1135,"title":{},"body":{"license.html":{}}}],["nest",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["nestjs",{"_index":717,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["nodemon",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["nome",{"_index":181,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["non",{"_index":896,"title":{},"body":{"license.html":{}}}],["nota",{"_index":748,"title":{},"body":{"index.html":{}}}],["note",{"_index":1214,"title":{},"body":{"license.html":{}}}],["notfounderror",{"_index":402,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["notfounderror(data",{"_index":636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["notfounderror(record",{"_index":426,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["notfoundexception",{"_index":397,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["nothing",{"_index":1179,"title":{},"body":{"license.html":{}}}],["notice",{"_index":785,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1004,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1078,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1070,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":930,"title":{},"body":{"license.html":{}}}],["novo",{"_index":335,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["npm",{"_index":696,"title":{},"body":{"index.html":{}}}],["number",{"_index":1206,"title":{},"body":{"license.html":{}}}],["não",{"_index":280,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["números",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["o",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["object",{"_index":532,"title":{},"body":{"injectables/UserService.html":{}}}],["obligation",{"_index":1027,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1023,"title":{},"body":{"license.html":{}}}],["obrigado",{"_index":745,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":984,"title":{},"body":{"license.html":{}}}],["offer",{"_index":913,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1028,"title":{},"body":{"license.html":{}}}],["offering",{"_index":848,"title":{},"body":{"license.html":{}}}],["onde",{"_index":651,"title":{},"body":{"index.html":{}}}],["one",{"_index":998,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":1068,"title":{},"body":{"license.html":{}}}],["onmoduleinit",{"_index":309,"title":{},"body":{"injectables/PrismaService.html":{}}}],["option",{"_index":1002,"title":{},"body":{"license.html":{}}}],["optional",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["ordem",{"_index":711,"title":{},"body":{"index.html":{}}}],["order",{"_index":1042,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":1052,"title":{},"body":{"license.html":{}}}],["origens",{"_index":658,"title":{},"body":{"index.html":{}}}],["original",{"_index":963,"title":{},"body":{"license.html":{}}}],["originally",{"_index":1208,"title":{},"body":{"license.html":{}}}],["os",{"_index":345,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["others",{"_index":774,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":880,"title":{},"body":{"license.html":{}}}],["ou",{"_index":282,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outras",{"_index":738,"title":{},"body":{"index.html":{}}}],["outstanding",{"_index":886,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1233,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":881,"title":{},"body":{"license.html":{}}}],["owns",{"_index":768,"title":{},"body":{"license.html":{}}}],["package",{"_index":590,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["param",{"_index":358,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":911,"title":{},"body":{"license.html":{}}}],["partial",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["partialtype",{"_index":432,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createprofiledto",{"_index":433,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createuserdto",{"_index":437,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":776,"title":{},"body":{"license.html":{}}}],["party",{"_index":1154,"title":{},"body":{"license.html":{}}}],["party's",{"_index":937,"title":{},"body":{"license.html":{}}}],["passport",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":273,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":357,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["patch('/my",{"_index":482,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":377,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":354,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patent",{"_index":836,"title":{},"body":{"license.html":{}}}],["payload",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":279,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedro",{"_index":722,"title":{},"body":{"index.html":{}}}],["pedro(https://steamcommunity.com/id/lord_pedro",{"_index":755,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":295,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["percent",{"_index":884,"title":{},"body":{"license.html":{}}}],["perfil",{"_index":171,"title":{},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{},"index.html":{}}}],["perfis",{"_index":346,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["perform",{"_index":906,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1122,"title":{},"body":{"license.html":{}}}],["permits",{"_index":999,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":957,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1159,"title":{},"body":{"license.html":{}}}],["pessoas",{"_index":739,"title":{},"body":{"index.html":{}}}],["place",{"_index":1173,"title":{},"body":{"license.html":{}}}],["placed",{"_index":1045,"title":{},"body":{"license.html":{}}}],["plataforma",{"_index":650,"title":{},"body":{"index.html":{}}}],["please",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["pode",{"_index":653,"title":{},"body":{"index.html":{}}}],["poder",{"_index":666,"title":{},"body":{"index.html":{}}}],["por",{"_index":468,"title":{},"body":{"controllers/UserController.html":{}}}],["portions",{"_index":792,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1156,"title":{},"body":{"license.html":{}}}],["possible",{"_index":822,"title":{},"body":{"license.html":{}}}],["post",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post('user",{"_index":494,"title":{},"body":{"controllers/UserController.html":{}}}],["post('user')@apioperation({summary",{"_index":456,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":333,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["power",{"_index":873,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":862,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["prevent",{"_index":1180,"title":{},"body":{"license.html":{}}}],["primeiro",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["principal",{"_index":1172,"title":{},"body":{"license.html":{}}}],["prior",{"_index":1072,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["prisma.profilecreateinput",{"_index":406,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prisma.profileupdateinput",{"_index":428,"title":{},"body":{"injectables/ProfileService.html":{}}}],["prisma.service",{"_index":305,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":315,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":307,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":46,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":132,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["privado",{"_index":649,"title":{},"body":{"index.html":{}}}],["private",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["pro",{"_index":750,"title":{},"body":{"index.html":{}}}],["process",{"_index":842,"title":{},"body":{"license.html":{}}}],["process.env.jwt_secret",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["profile",{"_index":320,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["profile.controller",{"_index":387,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.service",{"_index":361,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile.ts",{"_index":164,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.ts:11",{"_index":187,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.ts:19",{"_index":178,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.ts:26",{"_index":193,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile/profile.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":326,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":47,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":425,"title":{},"body":{"injectables/ProfileService.html":{},"classes/User.html":{}}}],["profileservice",{"_index":360,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["profits",{"_index":1144,"title":{},"body":{"license.html":{}}}],["prohibited",{"_index":1049,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1163,"title":{},"body":{"license.html":{}}}],["projeto",{"_index":640,"title":{},"body":{"index.html":{}}}],["promise",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":165,"title":{"properties.html":{}},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["property",{"_index":899,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1123,"title":{},"body":{"license.html":{}}}],["provided",{"_index":997,"title":{},"body":{"license.html":{}}}],["providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["provides",{"_index":1194,"title":{},"body":{"license.html":{}}}],["provision",{"_index":1189,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1062,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":1178,"title":{},"body":{"license.html":{}}}],["própria",{"_index":664,"title":{},"body":{"index.html":{}}}],["public",{"_index":728,"title":{},"body":{"index.html":{},"license.html":{}}}],["publicamente",{"_index":746,"title":{},"body":{"index.html":{}}}],["publish",{"_index":1203,"title":{},"body":{"license.html":{}}}],["published",{"_index":1209,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1117,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":871,"title":{},"body":{"license.html":{}}}],["put",{"_index":1223,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1121,"title":{},"body":{"license.html":{}}}],["que",{"_index":462,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["quiser",{"_index":670,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["realizar",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["reasonable",{"_index":989,"title":{},"body":{"license.html":{}}}],["recebendo",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":1081,"title":{},"body":{"license.html":{}}}],["received",{"_index":1079,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":994,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":982,"title":{},"body":{"license.html":{}}}],["record",{"_index":422,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["reference",{"_index":1176,"title":{},"body":{"license.html":{}}}],["references",{"_index":1213,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["reformed",{"_index":1192,"title":{},"body":{"license.html":{}}}],["regulation",{"_index":1039,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1061,"title":{},"body":{"license.html":{}}}],["relating",{"_index":1167,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1225,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":1013,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1005,"title":{},"body":{"license.html":{}}}],["removed",{"_index":933,"title":{},"body":{"license.html":{}}}],["rename",{"_index":1212,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1127,"title":{},"body":{"license.html":{}}}],["repositório",{"_index":691,"title":{},"body":{"index.html":{}}}],["representation",{"_index":960,"title":{},"body":{"license.html":{}}}],["represents",{"_index":961,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":902,"title":{},"body":{"license.html":{}}}],["request",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1012,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":948,"title":{},"body":{"license.html":{}}}],["resellers",{"_index":1106,"title":{},"body":{"license.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respect",{"_index":918,"title":{},"body":{"license.html":{}}}],["response.dto",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":293,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":298,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":297,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":979,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":988,"title":{},"body":{"license.html":{}}}],["result",{"_index":953,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":1161,"title":{},"body":{"license.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":818,"title":{},"body":{"license.html":{}}}],["rights",{"_index":826,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1120,"title":{},"body":{"license.html":{}}}],["royalty",{"_index":894,"title":{},"body":{"license.html":{}}}],["run",{"_index":712,"title":{},"body":{"index.html":{}}}],["running",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["sale",{"_index":849,"title":{},"body":{"license.html":{}}}],["scope",{"_index":924,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":796,"title":{},"body":{"license.html":{}}}],["secret",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":278,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":917,"title":{},"body":{"license.html":{}}}],["sections",{"_index":976,"title":{},"body":{"license.html":{}}}],["see",{"_index":955,"title":{},"body":{"license.html":{}}}],["seguindo",{"_index":700,"title":{},"body":{"index.html":{}}}],["seguinte",{"_index":710,"title":{},"body":{"index.html":{}}}],["seja",{"_index":659,"title":{},"body":{"index.html":{}}}],["select",{"_index":412,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["sell",{"_index":912,"title":{},"body":{"license.html":{}}}],["selling",{"_index":847,"title":{},"body":{"license.html":{}}}],["sempre",{"_index":672,"title":{},"body":{"index.html":{}}}],["senha",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":541,"title":{},"body":{"injectables/UserService.html":{}}}],["separate",{"_index":811,"title":{},"body":{"license.html":{}}}],["ser",{"_index":173,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["server",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["service",{"_index":943,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":1126,"title":{},"body":{"license.html":{}}}],["seu",{"_index":668,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1100,"title":{},"body":{"license.html":{}}}],["shares",{"_index":887,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["skill",{"_index":1053,"title":{},"body":{"license.html":{}}}],["sob",{"_index":726,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":740,"title":{},"body":{"index.html":{}}}],["software",{"_index":770,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":835,"title":{},"body":{"license.html":{}}}],["somente",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["special",{"_index":1138,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1034,"title":{},"body":{"license.html":{}}}],["src/.../admin.ts",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../data",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../handle",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../not",{"_index":632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":292,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":287,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":289,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":290,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":490,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":303,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":306,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":312,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":314,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/profile/dto/create",{"_index":163,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":431,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity",{"_index":451,"title":{},"body":{"classes/User.html":{}}}],["src/profile/entities/profile.entity.ts",{"_index":321,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts:2",{"_index":322,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:3",{"_index":324,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:4",{"_index":323,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:5",{"_index":325,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/profile.controller.ts",{"_index":327,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:28",{"_index":336,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:34",{"_index":348,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:42",{"_index":351,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:50",{"_index":356,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:58",{"_index":340,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":386,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":388,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:101",{"_index":391,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:15",{"_index":389,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:18",{"_index":390,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:47",{"_index":393,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:65",{"_index":394,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:85",{"_index":395,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/user/dto/create",{"_index":203,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":435,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":299,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/user/entities/user.entity.ts",{"_index":438,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":449,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":443,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":450,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":445,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":447,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":444,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":448,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":441,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":446,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":453,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":457,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":473,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:59",{"_index":469,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":480,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:79",{"_index":484,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:89",{"_index":464,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":516,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":518,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:101",{"_index":531,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:127",{"_index":523,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":535,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":520,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":521,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:52",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:66",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:79",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:90",{"_index":529,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/admin",{"_index":537,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/admin.ts",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/data",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/handle",{"_index":400,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/not",{"_index":403,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":713,"title":{},"body":{"index.html":{}}}],["started",{"_index":639,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["statute",{"_index":1038,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":1112,"title":{},"body":{"license.html":{}}}],["steam",{"_index":753,"title":{},"body":{"index.html":{}}}],["steward",{"_index":1201,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":1147,"title":{},"body":{"license.html":{}}}],["strategy",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["sua",{"_index":663,"title":{},"body":{"index.html":{}}}],["suas",{"_index":675,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1186,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":995,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":951,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":825,"title":{},"body":{"license.html":{}}}],["substance",{"_index":1006,"title":{},"body":{"license.html":{}}}],["sucesso",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["such",{"_index":788,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":965,"title":{},"body":{"license.html":{}}}],["sufficiently",{"_index":1050,"title":{},"body":{"license.html":{}}}],["summary",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1021,"title":{},"body":{"license.html":{},"modules.html":{}}}],["survive",{"_index":1108,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1231,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["são",{"_index":543,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["ter",{"_index":671,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1057,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1067,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1055,"title":{},"body":{"license.html":{}}}],["terms",{"_index":803,"title":{},"body":{"license.html":{}}}],["testes",{"_index":706,"title":{},"body":{"index.html":{}}}],["text",{"_index":1046,"title":{},"body":{"license.html":{}}}],["theory",{"_index":1133,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":793,"title":{},"body":{"license.html":{}}}],["third",{"_index":936,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":317,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":318,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findone(id",{"_index":427,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.myaccount(userid",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.profile",{"_index":411,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.delete",{"_index":429,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findmany",{"_index":416,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findunique",{"_index":423,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.user",{"_index":547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.profileservice.create(dto",{"_index":370,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.delete(id",{"_index":382,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findall(id",{"_index":373,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findone(id",{"_index":376,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(id",{"_index":379,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userselect",{"_index":548,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(dto",{"_index":495,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(user.id",{"_index":512,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(id",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(user",{"_index":498,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":502,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.myaccount(user.id",{"_index":508,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(user.id",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["those",{"_index":860,"title":{},"body":{"license.html":{}}}],["throw",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":824,"title":{},"body":{"license.html":{}}}],["timely",{"_index":990,"title":{},"body":{"license.html":{}}}],["title",{"_index":167,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{}}}],["todos",{"_index":344,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":296,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["tort",{"_index":1134,"title":{},"body":{"license.html":{}}}],["trabalho",{"_index":751,"title":{},"body":{"index.html":{}}}],["trademark",{"_index":900,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":942,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":850,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["treatment.ts",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":413,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["type",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typescript",{"_index":716,"title":{},"body":{"index.html":{}}}],["ui",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["uma",{"_index":174,"title":{},"body":{"classes/CreateProfileDto.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["under",{"_index":802,"title":{},"body":{"license.html":{}}}],["understand",{"_index":1054,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":1191,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["unless",{"_index":1063,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1239,"title":{},"body":{"properties.html":{}}}],["unmodified",{"_index":909,"title":{},"body":{"license.html":{}}}],["until",{"_index":1064,"title":{},"body":{"license.html":{}}}],["update",{"_index":331,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@loggeduser",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["update(@param('id",{"_index":378,"title":{},"body":{"controllers/ProfileController.html":{}}}],["update(id",{"_index":352,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["update(user",{"_index":481,"title":{},"body":{"controllers/UserController.html":{}}}],["update(userid",{"_index":530,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":440,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["updateprofiledto",{"_index":353,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":434,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["url",{"_index":175,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["use",{"_index":901,"title":{},"body":{"license.html":{}}}],["used",{"_index":775,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":359,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":367,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":146,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"injectables/ProfileService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":517,"title":{},"body":{"modules/UserModule.html":{}}}],["user.cpf",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":285,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user.decorator",{"_index":491,"title":{},"body":{"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":488,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":436,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.password",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":486,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.updatedat",{"_index":286,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/user.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user:user",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":452,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":168,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":48,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userselect",{"_index":519,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":485,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":846,"title":{},"body":{"license.html":{}}}],["usuário",{"_index":190,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":472,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["utilizando",{"_index":695,"title":{},"body":{"index.html":{}}}],["v",{"_index":1218,"title":{},"body":{"license.html":{}}}],["validate",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":199,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["validly",{"_index":1107,"title":{},"body":{"license.html":{}}}],["value",{"_index":534,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1241,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veja",{"_index":732,"title":{},"body":{"index.html":{}}}],["version",{"_index":730,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":859,"title":{},"body":{"license.html":{}}}],["visualizar",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["voc",{"_index":652,"title":{},"body":{"index.html":{}}}],["void",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["want",{"_index":1211,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1113,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1008,"title":{},"body":{"license.html":{}}}],["whether",{"_index":823,"title":{},"body":{"license.html":{}}}],["wide",{"_index":893,"title":{},"body":{"license.html":{}}}],["within",{"_index":1011,"title":{},"body":{"license.html":{}}}],["without",{"_index":839,"title":{},"body":{"license.html":{}}}],["work",{"_index":806,"title":{},"body":{"license.html":{}}}],["world",{"_index":892,"title":{},"body":{"license.html":{}}}],["z",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(): string {\n    return this.appService.getAppStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from './user/user.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [AuthModule, UserModule, PrismaModule, ProfileModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(): string {\n    return `Server is running! 🚀\\n Please check /api for Swagger docs...`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação.'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n\n@Controller('auth')\n@ApiTags('Login')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação.',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtservice: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtservice\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtservice: JwtService,\n  ) {}\n\n  async login(dto: LoginDto): Promise {\n    const { email, password } = dto;\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    const isValid = await bcrypt.compare(password, user.password);\n\n    if (!isValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n    delete user.cpf;\n\n    return {\n      token: this.jwtservice.sign({ email }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profile.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Foto do perfil. Deve ser uma URL.', example: 'https://i.pinimg.com/564x/aa/b0/08/aab008925049c314ab09a39aca5f4d88.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(3, 12)@ApiProperty({description: 'Nome do perfil. Deve conter de 3 a 12 letras', example: 'Honaru476'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Id do Usuário detentor do perfil.', example: '00000476'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, IsUUID, Length } from 'class-validator';\n\nexport class CreateProfileDto {\n  @IsString()\n  @Length(3, 12)\n  @ApiProperty({\n    description: 'Nome do perfil. Deve conter de 3 a 12 letras',\n    example: 'Honaru476',\n  })\n  title: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Foto do perfil. Deve ser uma URL.',\n    example:\n      'https://i.pinimg.com/564x/aa/b0/08/aab008925049c314ab09a39aca5f4d88.jpg',\n  })\n  imageUrl: string;\n\n  @IsUUID()\n  @ApiProperty({\n    description: 'Id do Usuário detentor do perfil.',\n    example: '00000476',\n  })\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha.', example: 'Bruxodorole476!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user-dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(11, 11)@Matches(/^[0-9]*$/, {message: 'CPF inválido.'})@ApiProperty({description: 'CPF do usuário, somente números.', example: '61327389088'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user-dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: 'Email do usuário para login.', example: 'honaru.dinyu@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user-dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Declaração de Adm.', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user-dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(3, 12)@ApiProperty({description: 'O nome do usuário deve conter entre 3 e 12 caracteres.', example: 'Honaru Dinyu'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login. Necessário letras maiúsculas e minúsculas, número e caracter especial.', example: 'Bruxodorole476!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user-dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Length, IsEmail, MinLength, IsString, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @Length(3, 12)\n  @ApiProperty({\n    description: 'O nome do usuário deve conter entre 3 e 12 caracteres.',\n    example: 'Honaru Dinyu',\n  })\n  name: string;\n\n  @IsEmail()\n  @ApiProperty({\n    description: 'Email do usuário para login.',\n    example: 'honaru.dinyu@gmail.com',\n  })\n  email: string;\n\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @ApiProperty({\n    description:\n      'Senha do usuário para login. Necessário letras maiúsculas e minúsculas, número e caracter especial.',\n    example: 'Bruxodorole476!',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha.',\n    example: 'Bruxodorole476!',\n  })\n  confirmPassword: string;\n\n  @Length(11, 11)\n  @Matches(/^[0-9]*$/, {\n    message: 'CPF inválido.',\n  })\n  @ApiProperty({\n    description: 'CPF do usuário, somente números.',\n    example: '61327389088',\n  })\n  cpf: string;\n\n  @ApiProperty({\n    description: 'Declaração de Adm.',\n    example: false,\n  })\n  isAdmin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException({\n        message: 'Usuário não existe ou não está autenticado',\n      });\n    }\n\n    delete user.password, user.createdAt, user.updatedAt, user.cpf;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Email do usuário', example: 'honaru.dinyu@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Bruxodorole476!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'honaru.dinyu@gmail.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Bruxodorole476!',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token de autenticação gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'Token de autenticação gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/entities/profile.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Profile {\n  id?: String;\n  title: string;\n  imageUrl: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar novo perfil.'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Deletar um perfil pelo ID.'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/profiles/:userId')@ApiOperation({summary: 'Listar todos os perfis de determinado usuário.'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um perfil pelo ID.'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um perfil pelo ID.'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { CreateProfileDto } from './dto/create-profile';\nimport { UpdateProfileDto } from './dto/update-profile';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Profile')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar novo perfil.',\n  })\n  create(@Body() dto: CreateProfileDto) {\n    return this.profileService.create(dto);\n  }\n\n  @Get('/profiles/:userId')\n  @ApiOperation({ summary: 'Listar todos os perfis de determinado usuário.' })\n  findAll(@Param('userId') id: string) {\n    return this.profileService.findAll(id);\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um perfil pelo ID.',\n  })\n  findOne(@Param('id') id: string) {\n    return this.profileService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um perfil pelo ID.',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateProfileDto) {\n    return this.profileService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Deletar um perfil pelo ID.',\n  })\n  delete(@Param('id') id: string) {\n    return this.profileService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProfileController],\n  providers: [ProfileService],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateProfileDto } from './dto/create-profile';\nimport { UpdateProfileDto } from './dto/update-profile';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Profile } from './entities/profile.entity';\nimport { Prisma } from '@prisma/client';\nimport { handleError } from 'src/utils/handle-error';\nimport { notFoundError } from 'src/utils/not-found';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateProfileDto) {\n    const data: Prisma.ProfileCreateInput = {\n      title: dto.title,\n      user: {\n        connect: {\n          id: dto.userId,\n        },\n      },\n      imageUrl: dto.imageUrl,\n    };\n\n    return await this.prisma.profile\n      .create({\n        data,\n        select: {\n          id: true,\n          title: true,\n          imageUrl: true,\n          user: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll(userId: string) {\n    const list = await this.prisma.profile.findMany({\n      where: { userId },\n      select: {\n        id: true,\n        title: true,\n        imageUrl: true,\n      },\n    });\n\n    if (list.length === 0) {\n      throw new NotFoundException(\n        'Não existem perfis cadastrados para este usuário.',\n      );\n    }\n    return list;\n  }\n\n  async findOne(id: string) {\n    const record = await this.prisma.profile.findUnique({\n      where: { id: id },\n      select: {\n        title: true,\n        imageUrl: true,\n        user: {\n          select: {\n            id: true,\n            name: true,\n            _count: { select: { profiles: true } },\n          },\n        },\n      },\n    });\n\n    notFoundError(record, id);\n    return record;\n  }\n\n  async update(id: string, dto: UpdateProfileDto): Promise {\n    await this.findOne(id);\n\n    const data: Prisma.ProfileUpdateInput = {\n      title: dto.title,\n      imageUrl: dto.imageUrl,\n    };\n\n    return this.prisma.profile\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findOne(id);\n    await this.prisma.profile.delete({\n      where: { id },\n    });\n    throw new HttpException('', 204);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user-dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                profiles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Profile } from 'src/profile/entities/profile.entity';\n\nexport class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  cpf: string;\n  isAdmin: boolean;\n  profiles?: Profile[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteUser\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                myAccount\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('user')@ApiOperation({summary: 'Criar novo usuário.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/my-account')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Deletar conta de usuário que está logada.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('user/:id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Only Admin - Deletar conta de usuário por Id .'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Only Admin - Listar todos os usuários.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Only Admin - Visualizar um usuário pelo ID.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myAccount\n                        \n                    \n                \n            \n            \n                \nmyAccount(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/my-account')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Visualizar informações da conta Logada.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, dto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/my-account')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Editar dados da conta logada.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user-dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from './entities/user.entity';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n\n  @Post('user')\n  @ApiOperation({\n    summary: 'Criar novo usuário.',\n  })\n  create(@Body() dto: CreateUserDto) {\n    return this.userService.create(dto);\n  }\n\n  @Get('user')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Only Admin - Listar todos os usuários.',\n  })\n  findAll(@LoggedUser() user: User) {\n    return this.userService.findAll(user);\n  }\n\n  @Get('user/:id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Only Admin - Visualizar um usuário pelo ID.',\n  })\n  findOne(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.userService.findOne(id, user);\n  }\n\n\n  @Delete('user/:id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Only Admin - Deletar conta de usuário por Id .',\n  })\n  deleteUser(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.userService.deleteUser(id, user);\n  }\n\n  @Get('/my-account')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Visualizar informações da conta Logada.',\n  })\n  myAccount(@LoggedUser() user: User) {\n    return this.userService.myAccount(user.id);\n  }\n\n  @Patch('/my-account')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Editar dados da conta logada.',\n  })\n  update(@LoggedUser() user: User, @Body() dto: UpdateUserDto) {\n    return this.userService.update(user.id, dto);\n  }\n\n  @Delete('/my-account')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Deletar conta de usuário que está logada.',\n  })\n  delete(@LoggedUser() user: User) {\n    return this.userService.delete(user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                myAccount\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        myAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    myAccount(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    cpf: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user-dto';\nimport { User } from './entities/user.entity';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handle-error';\nimport { notFoundError } from 'src/utils/not-found';\nimport { isAdmin } from 'src/utils/admin';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    cpf: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password !== dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({ data, select: this.userSelect })\n      .catch(handleError);\n  }\n\n\n\n  /////////////////////////////////////////////////// ADMIN\n\n  async findAll(user: User) {\n    isAdmin(user);\n    const list = await this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n\n    if (list.length === 0) {\n      throw new NotFoundException(\n        'Não existem usuários cadastrados ainda, gostaria de ser o primeiro?',\n      );\n    }\n    return list;\n  }\n\n  async findOne(id: string, user:User) {\n    isAdmin(user);\n\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    notFoundError(record, id);\n    return record;\n  }\n\n\n  async deleteUser(id: string, user:User) {\n    isAdmin(user)\n    await this.findOne(id, user);\n\n    await this.prisma.user.delete({\n      where: { id },\n    });\n    throw new HttpException('Usuário deletado com sucesso', 204);\n  }\n\n  ///////////////////////////  MY ACCOUNT\n  async myAccount(userId: string) {\n    const record = await this.prisma.user.findUnique({\n      where: { id: userId },\n      select: this.userSelect,\n    });\n\n    return record;\n  }\n\n\n\n  async update(userId: string, dto: UpdateUserDto){\n    await this.myAccount(userId);\n\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id: userId },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async delete(userId: string) {\n    await this.myAccount(userId);\n\n    await this.prisma.user.delete({\n      where: { id: userId },\n    });\n    throw new HttpException('Usuário deletado com sucesso.', 204);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profile.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/create-user-dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utils/admin.ts\n            \n            function\n            isAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/data-treatment.ts\n            \n            function\n            dataTreatment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/handle-error.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/not-found.ts\n            \n            function\n            notFoundError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.14.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            compodoc : 0.0.41\n        \n            cors : ^2.8.5\n        \n            dotenv : ^16.0.1\n        \n            nest : ^0.1.6\n        \n            nodemon : ^2.0.18\n        \n            passport : ^0.5.3\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            dataTreatment   (src/.../data-treatment.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.ts)\n                        \n                        \n                            isAdmin   (src/.../admin.ts)\n                        \n                        \n                            notFoundError   (src/.../not-found.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/data-treatment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataTreatment\n                        \n                    \n                \n            \n            \n                \ndataTreatment(data: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/utils/handle-error.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/admin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin(user: User)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/utils/not-found.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notFoundError\n                        \n                    \n                \n            \n            \n                \nnotFoundError(data: any, id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProjeto do módulo 04 do curso de backend na Blue EdTech - Bestiário Privado\nO Bestiário Privado é uma plataforma onde você pode adicionar monstros e criaturas de diversas origens, seja ela de games, livros ou da sua própria imaginação, você poderá adicionar ao seu perfil com a descrição que quiser para ter sempre uma lista a mão de suas invenções ou um modo de controlar os inimigos mortos em um game.\n👯‍♀️ Clonando\ngit clone https://github.com/SuiCarrot/BLUE-BCK-MOD05-BESTIARIO.git🔧 Instalação\nClone o repositório na sua maquina e instale as dependencias utilizando:\nnpm iCrie um arquivo .env seguindo o exemplo do arquivo .env.example completando os dados com o seu banco de dados.\n⚙️ Executando os testes\nApós a instalação das dependencias executar os testes na seguinte ordem:\nnpm run start🛠️ Construído com\n\nJavascript;\nTypescript\nSwagger\nNestJS\nPrisma\n\n✒️ Autores\n\nBruno de Lucca (https://github.com/SuiCarrot);\nPedro Henrique (https://github.com/phcPedro);\n\n📄 Licença\nEste projeto está sob a licença (Mozilla Public License Version 2.0) - veja o arquivo LICENSE.md para detalhes.\n🎁 Expressões de gratidão\n\nConte a outras pessoas sobre este projeto 📢\nConvide alguém da equipe para uma cerveja 🍺\nObrigado publicamente 🤓.\nDê uma nota alta pro trabalho.\nAdicione na Steam (https://steamcommunity.com/profiles/76561198044920869/)\nSteam de Pedro(https://steamcommunity.com/id/Lord_Pedro/)\netc.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n                                                                 *\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n                                                                 *\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user: User = request.user;\n\n  delete user.password;\n  delete user.cpf;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
